name: CI-CD
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.5

      - name: Login to Dockerhub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{  secrets.DOCKER_USERNAME }}
          password: ${{  secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Build Application Jar
        run: |
          cd api && \
          mvn clean package -DskipTests

      - name: Build the Docker image
        env:
          DB_SERVICE: db-service
          DB_USERNAME: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PSWD }}
          API_SECRET: ${{ secrets.API_SECRET }}
        run: docker compose -f compose.yaml -f compose-dev.yaml build

      - name: Push to Docker image to Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/e-commerce-api:latest ${{ secrets.DOCKER_USERNAME }}/e-commerce-api:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerce-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/e-commerce-api:${{ github.run_number }}

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:

      - name: Login to Google Cloud Platform
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2.1.0

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Deploy Docker image
        run: gcloud run deploy site --image $IMAGE_NAME --region us-central1 --memory 128Mi --min-instances 0 --max-instances 1 --platform managed --port 80 --allow-unauthenticated
